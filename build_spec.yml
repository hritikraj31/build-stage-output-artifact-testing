version: 0.1
component: build
timeoutInSeconds: 6000
runAs: root
shell: bash
env:
  variables:
    "minor_version" : "3.0"
  exportedVariables:
    - testEnv

steps:
  - type: Command
    name: "Build Source"
    timeoutInSeconds: 4000
    command: |
      echo "Testing Output Artifacts Upload from Build Stage"
      echo "This is binary artifact1" > binary_artifact1.txt
      echo "This is binary artifact2" > binary_artifact2.txt
      echo "This is binary artifact3" > binary_artifact3.txt
      mkdir target
      echo "This is binary artifact4" > target/binary_artifact4.txt
      echo "Created all binary artifacts"
      docker build -t built_image .
      echo "Docker Build Successful"
      echo $(docker images) > target/images_output.txt
      echo "Completed all steps"

outputArtifacts:
  - name: output1
    type: BINARY
    location: ${OCI_PRIMARY_SOURCE_DIR}/binary_artifact1.txt
    registryId: ${repoId}
    path: target/binary_artifact1
    version: ${minor_version}
  - name: output2
    type: BINARY
    location: ${OCI_WORKSPACE_DIR}/Source/binary_artifact2.txt
    registryId: ${repoId}
    path: target/binary_artifact2
    version: ${minor_version}
  - name: output3
    type: BINARY
    location: /workspace/Source/binary_artifact3.txt
    registryId: ${repoId}
    path: target/binary_artifact3
    version: ${minor_version}
  - name: output4
    type: BINARY
    location: target/binary_artifact4.txt
    registryId: ${repoId}
    path: target/binary_artifact4
    version: ${minor_version}
  - name: image_output
    type: BINARY
    location: target/images_output.txt
    registryId: ${repoId}
    path: target/images_output.txt
    version: ${minor_version}
  - name: output5
    type: DOCKER_IMAGE
    location: built_image
    imageUri: ${IMAGE_URI}
